name: build

on:
  push:
  pull_request:
  workflow_dispatch:
    
jobs:
  preamble:
    name: Preamble
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        if: startswith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

  build:
    name: Build Cas-OFFinder
    needs: preamble
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        configuration: [Release, Debug]
        arch: [x86_64]
        include:
          - os: windows-latest
            name: windows
            extension: .exe
          - os: macos-latest
            name: mac
          - os: ubuntu-latest
            name: linux 
    steps:
      - uses: actions/checkout@v2
      - name: Download OpenCL Library
        if: matrix.os == 'windows-latest'
        uses: actions/checkout@v2
        with:
          repository: intel/clGPU
          path: 'clGPU'
      - name: Setup Developer Command Prompt for MSVC
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
      - name: Install APT packages
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update -y; sudo apt-get install -y cmake opencl-headers ocl-icd-opencl-dev
      - name: Create Build Environment
        run: mkdir build
      - name: Build (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} && make
        working-directory: build
      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -G"NMake Makefiles" \
             -DOpenCL_INCLUDE_DIR="../clGPU/common/intel_ocl_icd/windows/include" \
             -DOpenCL_LIBRARY="../clGPU/common/intel_ocl_icd/windows/Release/lib/x64/OpenCL.lib" \
             && nmake
        working-directory: build
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: Cas-OFFinder Binary (${{ matrix.os }}, ${{ matrix.configuration }})
          path: build/cas-offinder${{ matrix.extension }}
      - name: Compress Binary
        if: startswith(github.ref, 'refs/tags/') && matrix.configuration == 'Release'
        run: 7z a cas-offinder_${{ matrix.name }}_${{ matrix.arch }}.zip build/cas-offinder${{ matrix.extension }}
      - name: Upload Release Asset
        if: startswith(github.ref, 'refs/tags/') && matrix.configuration == 'Release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.preamble.outputs.upload_url }}
          asset_path: ./cas-offinder_${{ matrix.name }}_${{ matrix.arch }}.zip
          asset_name: cas-offinder_${{ matrix.name }}_${{ matrix.arch }}.zip
          asset_content_type: application/zip
